{
  "name": "tsd",
  "version": "0.5.7",
  "description": "TypeScript Definition manager for DefinitelyTyped",
  "keywords": [
    "typescript",
    "definition",
    "package",
    "manager"
  ],
  "homepage": "https://github.com/DefinitelyTyped/tsd",
  "repository": {
    "type": "git",
    "url": "https://github.com/DefinitelyTyped/tsd.git"
  },
  "author": {
    "name": "Bart van der Schoor",
    "url": "https://github.com/Bartvds"
  },
  "contributors": [
    {
      "name": "Diullei Gomes",
      "url": "https://github.com/Diullei"
    }
  ],
  "licenses": [
    {
      "type": "Apache 2.0",
      "url": "https://raw.github.com/DefinitelyTyped/tsd/master/LICENSE.txt"
    }
  ],
  "bugs": {
    "url": "https://github.com/DefinitelyTyped/tsd/issues"
  },
  "preferGlobal": true,
  "engines": {
    "node": ">= 0.10.0 < 0.11.0"
  },
  "main": "./build/api.js",
  "bin": {
    "tsd": "./build/cli.js"
  },
  "scripts": {
    "test": "grunt test",
    "prepublish": "grunt pre_publish"
  },
  "dependencies": {
    "q": "~0.9.7",
    "q-io": "~1.9.4",
    "open": "~0.0.4",
    "exit": "~0.1.1",
    "mkdirp": "~0.3.5",
    "semver": "~2.2.1",
    "tv4": "~1.0.14",
    "tv4-reporter": "~0.0.4",
    "uri-templates": "0.1.2",
    "minimist": "0.0.7",
    "assertion-error": "1.0.0",
    "jsesc": "~0.4.3",
    "js-yaml": "~3.0.1",
    "json-pointer": "~0.1.0",
    "ministyle": "~0.1.3",
    "miniwrite": "~0.1.3",
    "minitable": "~0.0.2",
    "es6-shim": "0.9.1",
    "request": "~2.33.0",
    "event-stream": "~3.1.0",
    "bufferstream": "~0.6.2",
    "update-notifier": "git://github.com/Bartvds/update-notifier/#fix/fork",
    "universal-analytics": "~0.3.2",
    "uuid": "~1.4.1",
    "weak-map": "~1.0.3",
    "detect-indent": "~0.1.3"
  },
  "devDependencies": {
    "source-map-support": "~0.2.5",
    "grunt": "~0.4.2",
    "grunt-cli": "~0.1.11",
    "gruntfile-gtx": "~0.2.5",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-copy": "~0.4.1",
    "grunt-contrib-jshint": "~0.7.2",
    "jshint-path-reporter": "~0.1",
    "typescript": "0.9.7",
    "grunt-ts": "~1.7.0",
    "grunt-tslint": "~0.4.1",
    "tslint-path-formatter": "~0.1.0",
    "grunt-tv4": "~0.4.0",
    "grunt-shell": "~0.6.1",
    "grunt-contrib-connect": "~0.5.0",
    "grunt-todos": "git://github.com/Bartvds/grunt-todos/#master",
    "grunt-mocha-test": "~0.8.0",
    "mocha-unfunk-reporter": "~0.4.0",
    "chai": "git://github.com/Bartvds/chai/#fixes/1.8.x",
    "chai-fs": "~0.0.3",
    "chai-fuzzy": "~1.4.0",
    "chai-json-schema": "~1.0.10",
    "chai-as-promised": "~4.1.0",
    "buffer-equal": "0.0.0",
    "ansidiff": "~1.0.0",
    "lodash-template": "~1.0.0",
    "grunt-webshot": "~0.2.0",
    "grunt-regex-replace": "~0.2.5",
    "package.json-schema": "~0.2.0"
  },
  "readme": "# TSD\n\n[![Build Status](https://secure.travis-ci.org/DefinitelyTyped/tsd.png?branch=master)](http://travis-ci.org/DefinitelyTyped/tsd) [![NPM version](https://badge.fury.io/js/tsd.png)](http://badge.fury.io/js/tsd) [![Dependency Status](https://david-dm.org/DefinitelyTyped/tsd.png)](https://david-dm.org/DefinitelyTyped/tsd) [![devDependency Status](https://david-dm.org/DefinitelyTyped/tsd/dev-status.png)](https://david-dm.org/DefinitelyTyped/tsd#info=devDependencies)\n\n> TypeScript Definition manager for DefinitelyTyped\n\nTSD is a package manager to search and install [TypeScript](http://www.typescriptlang.org/) definition files directly from the community driven [DefinitelyTyped](https://github.com/borisyankov/DefinitelyTyped) repository. \n\n#### Usage notes\n\n*\tIt is recommended you check-in the definitions you install into your VCS.\n*\tDon't forget to move your fixes back to [DefinitelyTyped](https://github.com/borisyankov/DefinitelyTyped)\n\n#### Github rate-limit\n\nThe Github API has a 60-requests-per-hour [rate-limit](http://developer.github.com/v3/#rate-limiting) for non-authenticated use. You'll likely never hit this as TSD uses local caching and the definition files are downloaded from Github RAW urls. Optionally a scope-limited Github OAuth token can be used to boost the limit to 5000.\n\n#### Usage stats & update-notifier\n\nThe CLI tool [tracks](https://github.com/DefinitelyTyped/tsd/blob/master/src/tsd/cli/tracker.ts) some *anonymous* usage statistics about what definitions are installed though TSD in Google Analytics (using [universal-analytics](https://npmjs.org/package/universal-analytics)). There is also a [update-notifier](https://npmjs.org/package/update-notifier) service to check for TSD updates.\n\n## Install\n\nInstall global using [node](http://nodejs.org/) using [npm](https://npmjs.org/):\n\n````bash\n$ npm install tsd -g\n````\n\nFor previews and history check the [release tags](https://github.com/DefinitelyTyped/tsd/releases).\n\n## Usage as CLI command\n\nGlobal `tsd` binary:\n\n````bash\n$ tsd -h\n````\n\n[![$ tsd -h](https://raw.github.com/DefinitelyTyped/tsd/master/media/capture/help-small.png)](https://raw.github.com/DefinitelyTyped/tsd/master/media/capture/help.png)\n\nSometimes it looks like this:\n\n* [`$ tsd --help`](https://raw.github.com/DefinitelyTyped/tsd/master/media/capture/help.png)\n* [`$ tsd query async --info --history --action install`](https://raw.github.com/DefinitelyTyped/tsd/master/media/capture/async.png)\n* [`$ tsd query angular* --resolve`](https://raw.github.com/DefinitelyTyped/tsd/master/media/capture/angular.png)\n\n### Practical examples\n\nCreate a new `tsd.json`:\n\n````bash\n$ tsd init\n````\n\n#### Search\n\nMinimal query for `d3`:\n\n````bash\n$ tsd query d3\n````\n\nTip: if you are using Linux or Mac OS X, use `$ tsd query \"*\"`.\n\nGet some info about `jquery`:\n\n````bash\n$ tsd query jquery --info --resolve\n$ tsd query jquery -i -r\n$ tsd query jquery -ir\n````\n\nSearch for `jquery` plugins:\n\n````bash\n$ tsd query */jquery.*\n````\n\nView `mocha` history:\n\n````bash\n$ tsd query mocha --history\n$ tsd query mocha -y\n````\n\nList *everything*:\n\n````bash\n$ tsd query *\n````\n\n#### Open browser\n\nBrowse `pixi` definition on github:\n\n````bash\n$ tsd query pixi --action browse\n$ tsd query pixi -a browse\n````\n\nVisit `gruntjs` homepage:\n\n````bash\n$ tsd query gruntjs --action visit\n$ tsd query gruntjs -a visit\n````\n\n#### Install to project\n\nInstall `mocha`, `chai` and `sinon` definitions all at once:\n\n````bash\n$ tsd query mocha chai sinon --action install\n$ tsd query mocha chai sinon -a install\n````\n\nInstall `bootstrap` definitions:\n\n````bash\n$ tsd query bootstrap --action install\n$ tsd query bootstrap -a install\n````\n\nSolve the reference to `jquery`, overwrite existing files and save to the tsd.config:\n\n````bash\n$ tsd query angular --resolve --overwrite --save --action install\n$ tsd query angular -r -o -s -a install\n$ tsd query angular -rosa install\n````\nInstall and save to `test.d.ts` as `<reference/>` bundle:\n\n````bash\n$ tsd query mocha chai -r -o -s -a install -b test\n````\n\n## Query\n\nTSD uses a (globbing) path + filename selector to query the [DefinitelyTyped index](https://github.com/borisyankov/DefinitelyTyped). The results can then be modified using various filters:\n\nNote how the definition filename takes priority:\n\n````bash\n$ tsd query module\n$ tsd query project/module\n````\n\n\nFor example, consider these definitions:\n\n````\nproject/module.d.ts\nproject/module-0.1.2.d.ts\nproject/module-addon.d.ts\n\nproject-plugin/plugin.d.ts\n\nother/module.d.ts\nother/plugin.d.ts\n````\n\nNotice the pattern, and ignore the `.d.ts` extension:\n\n````html\n<project>/<module><semver>.d.ts\t\n````\n\nSelect definitions using only the module name:\n\n````bash\n$ tsd query module\n$ tsd query module-addon\n````\n\nOr use a selector derived from the path format:\n\n````bash\n$ tsd query project/module\n$ tsd query other/module\n````\n\n### Globbing filter\n\nThe selector also supports globbing, for example:\n\n````bash\n$ tsd query project/*\n$ tsd query project*\n$ tsd query module*\n$ tsd query project/module*\n$ tsd query project-*/plugin*\n$ tsd query *project*/*\n$ tsd query project/plugin*\n$ tsd query other/module\n$ tsd query */module\n$ tsd query */module-*\n$ tsd query */*plugin\n````\n\nGlobbing implements only leading and trailing (for now).\n\n### Semver filter\n\nNote: the [semver](https://github.com/isaacs/node-semver) postfix of definition files is expected to be separated by a dash and possibly a `'v'`\n\n````\nmodule-0.1.2\nmodule-v0.1.2\nmodule-v0.1.2-alpha\n````\n\nIf there are multiple matches with same module name they will be prioritised:\n\n1.\tThe unversioned name is considered being most recent.\n2.\tThen versions are compared as expected following these [comparison](https://github.com/isaacs/node-semver#comparison) rules.\n3.\tUse the `--version` / `-v` option to set a semver-range:\n\n````bash\n$ tsd query node -v latest\n$ tsd query node -v all\n$ tsd query node -v \">=0.8 <0.10\"\n$ tsd query node -v \"<0.10\"\n````\n\n### Date filter\n\nUse the `--date` / `-d` option to set a date-range (find dates using `--history` / `-y`):\n\n````bash\n$ tsd query d3 --history\n$ tsd query d3 --date \">=2012-01-01\"\n\n$ tsd query d3 -y\n$ tsd query d3 -d \"<2012-01-01\"\n````\n\n### Commit filter\n\nUse the `--commit` / `-c` option to supply sha1-hash of a commit (find a commit hash using `--history`), for convenience a shortened sha1 hash is supported. \n\n````bash\n$ tsd query youtube --history\n$ tsd query youtube --date d6ff\n\n$ tsd query youtube -y\n$ tsd query youtube -c d6ff\n````\n\nNotes:\n\n1. For now this only works with commits that actually changed the definition file you selected (eg, listed in `--history`) This will be expanded to allow selecting from any commit at a later date.\n\n## Usage as module\n \nTSD can be used as a JavaScript npm dependency: \n\n````js\nvar tsd = require('tsd');\nvar api = new tsd.API(new tsd.Context('path/to/tsd-config.json'));\napi.search(new tsd.Selector('jquery/*')).then(function(res) {\n\t// yes\n\tutil.inspect(res);\n\n}, function(err) {\n\t// no\n});\n````\n\nFor a practical example see [grunt-tsd](https://github.com/DefinitelyTyped/grunt-tsd).\n\nTSD uses Promise/A+ by [kriskowal/q](https://github.com/kriskowal/q) and [kriskowal/q-io](https://github.com/kriskowal/q-io) packages. :point_left::+1: \n\nNote: Keep in mind this project started as a `<reference>` style TypeScript `v0.8.x` single-file compile target, which makes it harder to limit the exported API compared to `import` multi-file style. This is also why the definitions include more then just the `tsd` namespace. \n\nAPI export is somewhat experimental; take care to lock versions and test on upgrade. If you plan to use TSD as module in a tool or project then feel free to [leave a message](https://github.com/DefinitelyTyped/tsd/issues) and coordinate stuff.\n\n### API docs \n\nNot yet. \n\n## Special files\n\n### tsd.json\n\nThe `tsd.json` file is automatically created in the root of each project: it configures TSD and it tracks the definitions that are installed (using `--save`). See the [JSON Schema](https://github.com/DefinitelyTyped/tsd/tree/master/schema) for more info.\n\n### tsd.d.ts\n\nThe `tsd.d.ts` file links every definition that is installed (with `--save`) for convenient reference:\n\n````\n/// <reference path=\"../typings/tsd.d.ts\" />\n```` \n\nBy default it is created in the typings folder but it is configurable in `tsd.json`. TSD will check the existing references and respects re-ordering.\n\n### .tsdrc\n\nThis is a optional JSON encoded file to define global settings. TSD looks for it in the  user's home director (eg: `%USERPROFILE%` on Windows, `$HOME` / `~` on Linux), and in the current working directory.\n\n- \"**proxy**\" - Use a http `proxy`\n\nAny standard http-proxy as supported by the [request](https://github.com/mikeal/request) package.\n\n````json\n{\n\t\"proxy\": \"http://proxy.example.com:88\"\n}\n````\n\n- \"**token**\" - Github OAuth token:\n\nThe OAuth token can be used to boost the Github API rate-limit from 60 to 5000 (non-cached) requests per hour. The is token needs just ['read-only access to public information'](http://developer.github.com/v3/oauth/#scopes) so no additional OAuth scopes are necessary.\n\n````json\n{\n\t\"token\": \"0beec7b5ea3f0fdbc95d0dd47f3c5bc275da8a33\"\n}\n````\n\nYou can create this token on Github.com:\n\n1. Go to https://github.com/settings/tokens/new\n3. *Deselect* all scopes to create a token with just basic authentication.\n\t1. (verify you *really* deselected all scopes) \n\t5. (wonder why these presets were set??)\n2. Enter a identifying name, something like \"`TSD Turbo 5000`\"\n5. Create the token.\n6. Copy the hex-string to the `token` element in the `.tsdrc` file.\n6. Verify enhanced rate-limit using `$ tsd rate`\n\nChange or revoke the token at any time on https://github.com/settings/applications\n\nNote: keep in mind the `.tsdrc` file is *not* secured. Don't use a token with additional scope unless you know what you are doing. \n\nThe bare 'no scope' token is *relatively* harmless as it gives 'read-only access to public information', same as any non-autenticated access. But it does *identify* any requests done with it as being *yours*, so it is still *your* responsibility to keep the token private.\n\n## FAQ & Info\n\n### Is there a grunt task available?\n\nOf course! The official plugin is [grunt-tsd](https://github.com/DefinitelyTyped/grunt-tsd).\n\n### I hit the rate-limit: now what?\n\nIf TSD is used in a way that needs many unique API calls in a short period (like using `--history` on big selections), or shares an internet-connection with multiple users (like in an office) then the rate limit blocks the API. It blocks for 60 minutes after the *first* request of the total 60.\n\nFor these cases TSD has an option to use a Github OAuth token and raise your local rate-limit from 60 to 5000 per hour. See the `.tsdrc`-section elsewhere in the readme.\n\n### Does TSD work behind a (corporate) http proxy?\n\nAs of `v0.5.7` there are two ways to configure the location of the proxy server:\n\n1. Use a environment variable. TSD support the conventional fields: pick one of `HTTPS_PROXY`, `https_proxy`, `HTTP_PROXY` or `http_proxy`.\n1. Use a global `.tsdrc` file and set a `proxy` value (see the tsdrc-section elsewhere in the readme).\n\n### Why does the install / search command not work like in TSD 0.3.0?\n\nThe old TSD `v0.3.0` had it's own repository data file that mapped module names to url's of definition files. This had a few downsides for (maintenance being one). Since `v0.5.0` we link directly to [DefinitelyTyped](https://github.com/borisyankov/DefinitelyTyped) where the directory and file names are a reasonable indicator but not 100% identical to the names as you'd find them in npm, bower or other package managers.\n\nThe DefinitelyTyped [group](https://github.com/DefinitelyTyped/tsd/issues) is working on a meta-data source that will solve this.\n\n### Can TSD auto-install definitions for a specific package version?\n\nYes, and no (and later yes again)\n\nThere is basic support for parsing semver-postfixes from the definition file names, and you can filter on this using [semver](https://github.com/isaacs/node-semver) ranges with the `--version` option: Try it with the 'node' definitions.\n\nIt works well but is not used much in the current DefinitelyTyped repository. The DefinitelyTyped [group](https://github.com/DefinitelyTyped/tsd/issues) is working on a meta-data source that will solve this (the [Nuget exporter](https://github.com/DefinitelyTyped/NugetAutomation) is waiting for this too).\n\n### What is the location of the cache folders?\n\nThe cache is stored in the users home directory (like `$ npm`). Use `$ tsd settings` to view the current paths. Use the `--cacheDir` to override the cache directory, or `--cacheMode` to modify caching behaviour. \n\n### I have a suggestion or contribution\n\nFeel free to leave a [ticket](https://github.com/DefinitelyTyped/tsd/issues). Questions and contributions for the definition files go [here](https://github.com/borisyankov/DefinitelyTyped/issues).\n\n## History\n\n### v0.5.x ( > 2013-08)\n\nSee the [release tags](https://github.com/DefinitelyTyped/tsd/releases) fore more details.\n\n* `0.5.x` - `current` - Full rewrite by @[Bartvds](https://github.com/Bartvds): drops the separated TSD data registry in favour of using the [Github API](http://developer.github.com/) to pull definitions directly from [DefinitelyTyped](https://github.com/borisyankov/DefinitelyTyped).\n\n### v0.3.x\n\n* Original version by @[Diullei](https://github.com/Diullei).\n\nTo install `v0.3.x` (old readme [here](https://github.com/DefinitelyTyped/tsd/blob/legacy/README.md)):\n\n````bash\n$ npm install tsd@0.3.0 -g\n````\n\n## Notable modules\n\nSome essential modules used to build TSD:\n\n* [es6-shim](https://github.com/paulmillr/es6-shim) & [weak-map](https://github.com/drses/weak-map) - Map, Sets and some usefull things.\n* [grunt-ts](https://github.com/basarat/grunt-ts) - TypeScript compiler for grunt.\n* [tslint](https://github.com/palantir/tslint) + [grunt-tslint](https://github.com/palantir/grunt-tslint) - TypeScript linter (contribute some rules!)\n* [gruntfile-gtx](https://github.com/Bartvds/gruntfile-gtx) - Gruntfile powerbooster (by author).\n* [tv4](https://github.com/geraintluff/tv4) - JSON-Schema validation like a boss.\n* [q](https://github.com/kriskowal/q) and [q-io](https://github.com/kriskowal/q-io) - Promises as promised.\n* [semver](https://github.com/isaacs/node-semver) - Semver parsing and filtering\n\n## Build\n\nTSD is build with [TypeScript](http://www.typescriptlang.org/) `v0.9.7` and managed using [Grunt](http://www.gruntjs.com).\n\nTo rebuild clone or fork the repos:\n\nInstall dependencies\n\n````bash\n$ npm install\n````\n\nBuild, lint and test\n\n````bash\n$ grunt test\n````\n\nOnly rebuild (and run cli)\n\n````bash\n$ grunt build\n````\n\nEither install global or use in dev folder:\n\nRun in dev folder\n\n````bash\n$ node ./build/cli.js query d3 --dev\n````\n\nInstall to global cli\n\n````bash\n$ npm install . -g\n````\n\nTSD uses [gruntfile-gtx](https://github.com/Bartvds/gruntfile-gtx) to test separate test suites sets during development:\n\nList aliases\n\n````bash\n$ grunt -h\n````\n\nExample: run only api tests\n\n````bash\n$ grunt gtx:api\n$ grunt gtx:cli\n$ grunt gtx:tsd\n````\n\nIt is recommend you use an intelligent parsing IDE (WebStorm or VisualStudio) and a big screen (or two) on a properly powerful workstation.\n\nCode looks best with tabs rendered at 4 spaces (3 is nice too, or 6 or 8.. I don't really care, because [smart-tabs](http://www.emacswiki.org/SmartTabs) are awesome like that). The gruntfile uses slightly harsh [JSHint](https://github.com/jshint/jshint) and [TSLint](https://github.com/palantir/tslint) settings to enforce code style, but there is an [`.editorconfig`](http://editorconfig.org/) to elevate some of the pain.\n\n## Contribute\n\nContributions are very welcome; please discuss larger changes in a [ticket](https://github.com/DefinitelyTyped/tsd/issues) first. Fixes and simple enhancements are always much appreciated. \n\n**Note:** Contributions on the definition files go directly to [DefinitelyTyped](https://github.com/borisyankov/DefinitelyTyped).\n\n## Privacy statement\n\nThe TSD CLI tool collects definition usage information, like the queries made to the repo and the definitions that get installed. The information collected amounts to about same level of detail as services like npm or github would collect (maybe even less as we don't track a user id). \n\nThe API does not track anything. \n\nTo store this TSD uses [Google Analytics](http://www.google.com/analytics/) in the excellent [universal-analytics](https://npmjs.org/package/universal-analytics) package. We might at some point publish some anonymised aggregate stats to the DefinitelyTyped website.\n\nThe optional [Github OAuth token](http://developer.github.com/v3/oauth/) is only used to authenticate with the Github API. The token is not stored anywhere but the local machine. It is your responsibility to keep your token safe. \n\nUsing an OAuth token with additional scope is *not advised nor supported* (even though it could make TSD work with private repositories). But it might also leak repo or content names to analytics or leave a bare http cache in your temp dir. If this bothers you please review the license and/or leave a message.\n\nChanges to the policy should be announced in release notes, and ideally ask confirmation on the first CLI use.\n\n## License\n\nCopyright (c) 2013 by [Bart van der Schoor](https://github.com/Bartvds).\n\nLicensed under the [Apache License, Version 2.0](https://raw.github.com/DefinitelyTyped/tsd/master/LICENSE.txt). \n\n* note: there is some imported MIT licensed code by myself, [Bart van der Schoor](https://github.com/Bartvds)\n\nCopyright (c) 2012 by [Diullei Gomes](https://github.com/Diullei).\n\nLicensed under the MIT License. \n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/DefinitelyTyped/tsd/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n",
  "readmeFilename": "README.md",
  "_id": "tsd@0.5.7",
  "dist": {
    "shasum": "c362d7ac9c44a4215e36d6175f4d95bd60d7e8a7"
  },
  "_from": "tsd@",
  "_resolved": "https://registry.npmjs.org/tsd/-/tsd-0.5.7.tgz"
}
